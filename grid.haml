!!!
%head
  %title NIRDgrid examples
  %link{:rel => "stylesheet", :href => "grid.css", :type => "text/css"}

%body
  .writeup
    %h1.discussion Introduction
    %p.discussion The NIRDgrid uses SASS mixins to generate column-based styles for our webapps, and is designed to accomodate a wide variety of style choices. This grid uses floated elements with carefully designed margins, paddings and widths to position each element in a horizontal column layout.
    %h2.discussion Some Assumptions about your design
    %ul.discussion
      %li You are pretty confidant with the order of elements in your view, and can rearrange your DOM as needed.
      %li You are not planning on rearranging things on the fly. It is possible, but awkward.
      %li You are planning on consistent margins around and gutters between your columns.
    %h2.discussion The mixins
    %code.mixin
      :escaped
        +row( <width of margin in % of browser>, <width of gutter in % of browser> )
    %p.discussion The row mixin calculates the necessary margins, paddings and widths of a container element so that elements with a column layout can be properly floated within it.
    %code.mixin
      :escaped
        +column( <number of columns in layout>, <number of columns wide this element should be>, <margin %>, <gutter %>, <number of columns element should be pushed left>, <number of columns element should be pushed right> )
    %p.discussion The column mixin instructs your element to have the right margins and width so that, when floated in the container with the row mixin applied, will naturally pop into the column grid you want. The number of columns in your grid is defined with the first parameter (as an integer), and the width of your element can be specified as an integer multiple of rows. Both default to 1 if you don't input them. The margin % and gutter % should match those used in the row of the parent element. You can also push your element a number of columns to the left or the right (depending on which side you're floating off of) if your design calls for gaps between the content.

    %h1.discussion Example 1 - the basics
    %code.example
      %h2 grid.haml
      :escaped
        .ex1_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          %h1 This is the row element
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex1_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h2 This is the first column
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex1_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h2 This is the second column
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex1_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row()
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex1_col
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +col(2, 1)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Med Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          &:nth-of-type(2n)
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          background-color: #ebccad //Light Brown
  .ex1_row
    %h1 This is the row element
    .ex1_col
      %h2 This is the first column
    .ex1_col
      %h2 This is the second column
  .writeup
    %h2.discussion So what's going on?
    %p.discussion This example did not specify a margin or width, so they defaulted to zero and the column grid took up the whole page without. The float_left placeholder handles the floating of the elements. Of course the background coloring of the elements has nothing to do with the grid, but it hopefully helped you see what each element was doing.

    %h1.discussion Example 2 - What about having too many elements for the row?
    %code.example
      %h2 grid.haml
      :escaped
        .ex1_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          %h1 Row element
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex1_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h2 First column
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex1_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h2 Third column
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex1_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h2 Fourth column
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex1_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(5%, 10%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex1_col
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +col(3, 1, 5%, 10%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          &:nth-of-type(2n)
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          background-color: #ebccad //Light Brown
  .ex2_row
    %h1 Row Element
    .ex2_col
      %h2 First Column
    .ex2_col
      %h2 Second Column
    .ex2_col
      %h2 Third Column
    .ex2_col
      %h2 Fourth Column

  .writeup
    %h2.discussion Why does the label for row not get any kind of margin?
    %p.discussion The row element is helpful for positioning the columns and perhaps carrying a background color, but isn't designed for carrying its own content. In this case, we might apply something like
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex2_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          h1
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          +row(1, 1, 5%, 10%)
    %h3.discussion Which would look something like this:
  .ex2-1_row
    %h1 Row Element
    .ex2_col
      %h2 First Column
    .ex2_col
      %h2 Second Column
    .ex2_col
      %h2 Third Column
    .ex2_col
      %h2 Fourth Column
  .writeup
    %h2.discussion Does this wrapping columns awesomeness still work when the columns are different heights?
    %p.discussion Ok, you got me. Here's what happens when you try that:
  .ex2_row
    .ex2_col
      %h2 First Column
      %p And some text, just to make the world an asymetrical place.
    .ex2_col
      %h2 Second Column
    .ex2_col
      %h2 Third Column
    .ex2_col
      %h2 Fourth Column
  .writeup
    %p.discussion You are assumed to have control over the layout of your view, so the fix is simple: apply another row:
  .ex2_row
    .ex2_col
      %h2 First Column
      %p And some text, just to make the world an asymetrical place.
    .ex2_col
      %h2 Second Column
    .ex2_col
      %h2 Third Column
  .ex2_row
    .ex2_col
      %h2 Fourth Column
  .writeup
    %h2.discussion What's that 4px air gap between those rows?
    %p.discussion It has to do with the rows being display: inline-block with floated content within them. This gap is not actually 4px, it is actually 1 character width (in the parent container's font-size). There are a couple fixes for this, depending on your design needs. If you can specify the font size of every single text elemnt you will use, you can set:
    %code.example
      %h2 grid.sass
      %br
      :escaped
        html
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          font-size: 0
      %br
      :escaped
        h1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          font-size: 22px
      %br
      :escaped
        h2
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          font-size: 18px
      %br
      :escaped
        // And so on
    %p.discussion If you would rather use the scapel in leu of the sledgehammer, you can apply the following to the offending rows:
    %code.example
      %h2 grid.sass
      %br
      :escaped
        .ex2_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          margin-bottom: -4px
    %h1.discussion Example 3 - nesting columns inside other columns
    %code.example
      %h2 grid.haml
      :escaped
        .ex3_row
      %br

      = precede '&nbsp;' * 2 do
        :escaped
          .ex3_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 Second column
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex3_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          .ex3_nest_row
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          %h1 Main column
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          .ex3_nest
      %br
      = precede '&nbsp;' * 8 do
        :escaped
          Nested
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          .ex3_nest
      %br
      = precede '&nbsp;' * 8 do
        :escaped
          Nested
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          .ex3_nest
      %br
      = precede '&nbsp;' * 8 do
        :escaped
          Nested
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex3_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 Third column
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex3_col
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 Fourth column
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex3_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(4%, 2%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex3_col
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(4, 1, 4%, 2%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          &:nth-of-type(2n)
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          background-color: #ebccad //Light Brown
      %br
      :escaped
        %h1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(1, 1, 5%, 10%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #ebccad //Light Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      :escaped
        .ex3_nest_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(5%, 10%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #adcceb //Light Blue
      %br
      :escaped
        .ex3_nest
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(3, 1, 5%, 10%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          &:nth-of-type(2n)
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          background-color: #664019 //Dark Brown
  .ex3_row
    .ex3_col
      .ex3_nest_row
        %h1 First Column
    .ex3_col
      .ex3_nest_row
        %h1 Main column
        .ex3_nest
          Nested
        .ex3_nest
          Nested
        .ex3_nest
          Nested
    .ex3_col
      .ex3_nest_row
        %h1 Third Column
    .ex3_col
      .ex3_nest_row
        %h1 Fourth Column
  .writeup
    %h1.discussion Example 4 - multiple column widths
    %p.discussion The NIRDgrid is able to expand your selected elements to fit multiple columns, if your design calls for that sort of thing. Note how the second value that specifies column width is a whole number of your layout's basic columns. Like the rest of NIRDgrid, the class names here are arbitrary, so all you need to do is call the mixins in the definition of your element's selector, and you're good to go.
    %code.example
      %h2 grid.haml
      :escaped
        .ex4_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_small
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_small
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_medium
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 2 Col
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_large
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 3 Columns
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_small
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex4_col_huge
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 4 Columns
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex4_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(2%, 4%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex4_col_small
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 1, 2%, 4%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
      %br
      :escaped
        .ex4_col_medium
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 2, 2%, 4%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #ebccad //Light Brown
      %br
      :escaped
        .ex4_col_large
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 3, 2%, 4%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #664019 //Dark Brown
      %br
      :escaped
        .ex4_col_huge
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 4, 2%, 4%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
  .ex4_row
    .ex4_col_small
      %h1 1
    .ex4_col_small
      %h1 1
    .ex4_col_medium
      %h1 2 Col
    .ex4_col_large
      %h1 3 Columns
    .ex4_col_small
      %h1 1
    .ex4_col_huge
      %h1 4 Columns
  .writeup
    %h1.discussion Example 5 - Pushing columns around
    %p.discussion Sometimes, especially on fairly sparse pages (login pages, for instance), you will want your columns to get pushed around, such as to be center aligned. NIRDgrid has optional values in the column mixin to handle this eventuality. Simply state how many base columns over you want to push in the direction you are pushing from, and your element will be nudged over a number of columns. There is the option to push from the right on right floated elements, but this is a rare case. You will note that it is possible to push in fractions of rows, but this isn't a normal practice in a strict column-based design.
    %code.example
      %h2 grid.haml
      :escaped
        .ex5_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex5_col-6_push-3
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 This is in the center of the page
      %br
      %br
      :escaped
        .ex5_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          - (1..12).each do
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          .ex5_col-1
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          %h2 Col
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex5_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(5%, 1%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex5_col-6_push-3
      %br
      = precede '&nbsp;' * 2 do
        +column(12, 6, 5%, 1%, 3, 0)
      %br
      = precede '&nbsp;' * 2 do
        background-color: #a36629 //Medium Brown
      %br
      :escaped
        .ex5_col-1
      %br
      %br
      :escaped
        //Reference columns
      %br
      = precede '&nbsp;' * 2 do
        +column(12, 1, 5%, 1%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #ebccad //Light Brown
  .ex5_row
    .ex5_col-6_push-3
      %h1 This is in the center of the page
  .ex5_row
    - (1..12).each do
      .ex5_col-1
        %h2 Col
  .writeup
    %h2.discussion Why isn't there an air-gap here?
    %p.discussion You will notice that the element was not actually floated. The consequence of this is that the rows are not forced apart.
    %h1.discussion Example 6 - Borders and element internal padding
    %p.discussion This case handles all the advanced options available. Some of the elements have borders, others have internal padding. Both cases require %box to keep the math right.
    %code.example
      %h2 grid.haml
      :escaped
        .ex6_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex6_col-2
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 On the left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex6_col-3_push-2
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 Pushed 2 from the left
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %p 10px padding on both sides
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          .ex6_col-3_push-1_right
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %h1 Pushed from the right
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          %p With 15px padding
      %br
      %br
      :escaped
        .ex6_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          - (1..12).each do
      %br
      = precede '&nbsp;' * 4 do
        :escaped
          .ex5_col-1
      %br
      = precede '&nbsp;' * 6 do
        :escaped
          %h2 Col
    %code.example
      %h2 grid.sass
      :escaped
        @import "NIRDgrid"
      %br
      %br
      :escaped
        .ex6_row
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +row(3%, 1%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #2966a3 //Dark Blue
      %br
      :escaped
        .ex6_col-2
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 2, 3%, 1%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %box
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          border: solid 2px #664019 //Dark Brown
      %br
      :escaped
        .ex6_col-3_push-2
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 3, 3%, 1%, 2)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %box
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #a36629 //Medium Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          padding: 10px 10px
      %br
      :escaped
        .ex6_col-3_push-1_right
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 3, 3%, 1%, 0, 1)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %box
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_right
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #ebccad //Light Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          border: solid 5px #664019 //Dark Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          padding: 15px 15px
      %br
      :escaped
        .ex6_col-1
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          +column(12, 1, 3%, 1%)
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          background-color: #ebccad //Light Brown
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %float_left
      %br
      = precede '&nbsp;' * 2 do
        :escaped
          @extend %box
  .ex6_row 
    .ex6_col-2 
      %h1 On the left 
    .ex6_col-3_push-2 
      %h1 Pushed 2 from the left 
      %p 10px padding on both sides 
    .ex6_col-3_push-1_right 
      %h1 Pushed from the right 
      %p With 15px padding 

  .ex6_row 
    - (1..12).each do 
      .ex5_col-1 
        %h2 Col
  .writeup
    %h2.discussion How come the right edge of the red border doesn't perfectly align with the right edge of the column below it?
    %p.discussion Its not recommended that you use much %float_right, because browsers don't perfectly calculate the number of pixels of elements sized in percentages. You will find this to be more or less of an issue, depending on your design and your browser support, but floating your element to the right makes a big change in the pixel math that may be quite unattractive. Use the right floating and right pushing features with caution!
